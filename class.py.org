import os
import random
import tkinter as tk
from tkinter import ttk
from PIL import Image, ImageTk

class RandomLoadoutApp:
    def __init__(self, root, assets_dir):
        self.root = root
        self.assets_dir = assets_dir
        self.list_of_items = [f for f in os.listdir(assets_dir) if f.endswith('.jpeg') or f.endswith('.jpg')]
        self.images = {}
        self.load_images()
        self.setup_gui()

    def load_images(self):
        for item in self.list_of_items:
            image = Image.open(os.path.join(self.assets_dir, item))
            image = image.resize((100, 100), Image.LANCZOS)              
            self.images[item] = ImageTk.PhotoImage(image)

    def setup_gui(self):
        self.frame = ttk.Frame(self.root, padding='10')
        self.frame.grid(row=0, column=0, sticky=(tk.W, tk.E, tk.N, tk.S))

        ttk.Label(self.frame, text='Helldiver Loadout',
                  font=('Helvetica', 16)).grid(row=0, column=0,
                                               columnspan=5, pady=10)
        ttk.Button(self.frame, text='Generate Loadout',
                   command=self.generate_random_loadout).grid(row=1,column=0,columnspan=5, pady=10)

        self.images_frame = ttk.Frame(self.frame)
        self.images_frame.grid(row=2, column=0, columnspan=5, pady=10)

    def generate_random_loadout(self):
        if len(self.list_of_items) < 4:
            self.display_images([])
            return
        random_items = random.sample(self.list_of_items, 4)
        self.display_images(random_items)

    def display_images(self, random_items):
        for widget in self.images_frame.winfo_children():
            widget.destroy()
            
        for i, item in enumerate(random_items):
            #Display image
            image_label = ttk.Label(self.images_frame, image=self.images[item])
            image_label.grid(row=0, column=i, padx=10, pady=10)
            # Store the image in the label to avoid garbage collection
            image_label.image = self.images[item] 

            #Display item name below image
            #Remove extension and replace hyphens with spaces
            item_name = os.path.splitext(item)[0].replace("-", " ")  
            name_label = ttk.Label(self.images_frame, text=item_name,
                                   font=('Helvetica', 12))
            name_label.grid(row=1, column=i, padx=10, pady=5)

        # Add empty spaces for up to 5 items
        for i in range(len(random_items), 5):
            ttk.Label(self.images_frame, text="").grid(row=0, column=i,
                                                       padx=10, pady=10)
            ttk.Label(self.images_frame, text="").grid(row=1, column=i,
                                                       padx=10, pady=5)

if __name__ == "__main__":
    assets_dir = './assets/ALL'
    root = tk.Tk()
    root.title("Random Loadout Selector")  
    app = RandomLoadoutApp(root, assets_dir)
    root.mainloop()
